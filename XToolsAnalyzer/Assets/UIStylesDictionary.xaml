<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="Header" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource UltraDarkBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="Subtitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource UltraDarkBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
    <Style x:Key="NormalText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource UltraDarkBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Regular"/>
    </Style>

    <Style x:Key="LightHeader" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource UltraLightBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="LightSubtitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource UltraLightBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
    <Style x:Key="LightText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource UltraLightBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Regular"/>
    </Style>

    <Style x:Key="NormalButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource UltraDarkBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            Padding="5"
                            BorderThickness="1"
                            BorderBrush="{StaticResource UltraDarkBrush}"
                            CornerRadius="3"
                            Background="{StaticResource LightBrush}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Center" 
                                              Name="Content" 
                                              Margin="2 0 0 0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource UltraLightBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <GradientStop Color="{StaticResource LightColor}" Offset="0.35"/>
                                        <GradientStop Color="{StaticResource MediumColor}" Offset="0.95"/>
                                        <GradientStop Color="{StaticResource DarkColor}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="{StaticResource MediumBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource UltraDarkBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0"
                                    Background="{StaticResource UltraLightBrush}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource UltraDarkBrush}">
                                <Path Width="7" Height="7" 
                                      x:Name="CheckMark"
                                      SnapsToDevicePixels="False" 
                                      Stroke="{StaticResource UltraDarkBrush}" StrokeThickness="2"
                                      Data="M 0 0 L 7 7 M 0 7 L 7 0"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" 
                                          VerticalAlignment="Center" HorizontalAlignment="Left"
                                          RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MediumBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource MediumBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomRadioButton" TargetType="{x:Type RadioButton}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Height="13" Width="13">
                                <Border Name="RadioOuter" Background="{StaticResource UltraLightBrush}" BorderBrush="{StaticResource UltraDarkBrush}" BorderThickness="1" CornerRadius="10"/>
                                <Ellipse Margin="4" Name="RadioMark" Stroke="{StaticResource UltraDarkBrush}" Visibility="Hidden" Fill="{StaticResource UltraDarkBrush}"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <TextBlock Style="{StaticResource NormalText}" Margin="3 0 0 0">
                            <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>